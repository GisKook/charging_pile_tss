// Code generated by protoc-gen-go.
// source: manage.proto
// DO NOT EDIT!

package Report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Command_CommandType int32

const (
	Command_CMT_INVALID Command_CommandType = 0
	// das<->tms
	Command_CMT_REQ_LOGIN Command_CommandType = 1
	Command_CMT_REP_LOGIN Command_CommandType = 32769
	// das<->tms
	Command_CMT_REQ_SETTING Command_CommandType = 16
	Command_CMT_REP_SETTING Command_CommandType = 32784
	// das->tss
	Command_CMT_REQ_HEART Command_CommandType = 5
	// das<->tms
	Command_CMT_REQ_PRICE Command_CommandType = 3
	Command_CMT_REP_PRICE Command_CommandType = 32771
	// wechat <-> das
	Command_CMT_REQ_GET_GUN_STATUS Command_CommandType = 32774
	Command_CMT_REP_GET_GUN_STATUS Command_CommandType = 6
	// wechat <-> das
	Command_CMT_REQ_CHARGING Command_CommandType = 32775
	Command_CMT_REP_CHARGING Command_CommandType = 7
	// wechat <-> das
	Command_CMT_REQ_STOP_CHARGING Command_CommandType = 32782
	Command_CMT_REP_STOP_CHARGING Command_CommandType = 14
	// web<->das
	Command_CMT_REQ_NOTIFY_SET_PRICE Command_CommandType = 32783
	Command_CMT_REP_NOTIFY_SET_PRICE Command_CommandType = 15
	// das->wechat
	Command_CMT_REP_CHARGING_STARTED Command_CommandType = 8
	// das->wechat
	Command_CMT_REP_CHARGING_DATA_UPLOAD Command_CommandType = 9
	// das->wechat
	Command_CMT_REP_CHARGING_STOPPED Command_CommandType = 11
	// das <-> web
	Command_CMT_REQ_PIN Command_CommandType = 32780
	Command_CMT_REP_PIN Command_CommandType = 12
	// das -> ?
	Command_CMT_REP_OFFLINE_DATA Command_CommandType = 13
	// tss->wechat
	Command_CMT_NOTIFY_TRANSCATION Command_CommandType = 256
)

var Command_CommandType_name = map[int32]string{
	0:     "CMT_INVALID",
	1:     "CMT_REQ_LOGIN",
	32769: "CMT_REP_LOGIN",
	16:    "CMT_REQ_SETTING",
	32784: "CMT_REP_SETTING",
	5:     "CMT_REQ_HEART",
	3:     "CMT_REQ_PRICE",
	32771: "CMT_REP_PRICE",
	32774: "CMT_REQ_GET_GUN_STATUS",
	6:     "CMT_REP_GET_GUN_STATUS",
	32775: "CMT_REQ_CHARGING",
	7:     "CMT_REP_CHARGING",
	32782: "CMT_REQ_STOP_CHARGING",
	14:    "CMT_REP_STOP_CHARGING",
	32783: "CMT_REQ_NOTIFY_SET_PRICE",
	15:    "CMT_REP_NOTIFY_SET_PRICE",
	8:     "CMT_REP_CHARGING_STARTED",
	9:     "CMT_REP_CHARGING_DATA_UPLOAD",
	11:    "CMT_REP_CHARGING_STOPPED",
	32780: "CMT_REQ_PIN",
	12:    "CMT_REP_PIN",
	13:    "CMT_REP_OFFLINE_DATA",
	256:   "CMT_NOTIFY_TRANSCATION",
}
var Command_CommandType_value = map[string]int32{
	"CMT_INVALID":                  0,
	"CMT_REQ_LOGIN":                1,
	"CMT_REP_LOGIN":                32769,
	"CMT_REQ_SETTING":              16,
	"CMT_REP_SETTING":              32784,
	"CMT_REQ_HEART":                5,
	"CMT_REQ_PRICE":                3,
	"CMT_REP_PRICE":                32771,
	"CMT_REQ_GET_GUN_STATUS":       32774,
	"CMT_REP_GET_GUN_STATUS":       6,
	"CMT_REQ_CHARGING":             32775,
	"CMT_REP_CHARGING":             7,
	"CMT_REQ_STOP_CHARGING":        32782,
	"CMT_REP_STOP_CHARGING":        14,
	"CMT_REQ_NOTIFY_SET_PRICE":     32783,
	"CMT_REP_NOTIFY_SET_PRICE":     15,
	"CMT_REP_CHARGING_STARTED":     8,
	"CMT_REP_CHARGING_DATA_UPLOAD": 9,
	"CMT_REP_CHARGING_STOPPED":     11,
	"CMT_REQ_PIN":                  32780,
	"CMT_REP_PIN":                  12,
	"CMT_REP_OFFLINE_DATA":         13,
	"CMT_NOTIFY_TRANSCATION":       256,
}

func (x Command_CommandType) String() string {
	return proto.EnumName(Command_CommandType_name, int32(x))
}
func (Command_CommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type Command struct {
	Type         Command_CommandType `protobuf:"varint,1,opt,name=type,enum=Report.Command_CommandType" json:"type,omitempty"`
	Uuid         string              `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Tid          uint64              `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	SerialNumber uint32              `protobuf:"varint,4,opt,name=serial_number" json:"serial_number,omitempty"`
	Paras        []*Param            `protobuf:"bytes,5,rep,name=paras" json:"paras,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Command) GetType() Command_CommandType {
	if m != nil {
		return m.Type
	}
	return Command_CMT_INVALID
}

func (m *Command) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Command) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *Command) GetSerialNumber() uint32 {
	if m != nil {
		return m.SerialNumber
	}
	return 0
}

func (m *Command) GetParas() []*Param {
	if m != nil {
		return m.Paras
	}
	return nil
}

func init() {
	proto.RegisterType((*Command)(nil), "Report.Command")
	proto.RegisterEnum("Report.Command_CommandType", Command_CommandType_name, Command_CommandType_value)
}

func init() { proto.RegisterFile("manage.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0x4d, 0x6b, 0xdb, 0x30,
	0x18, 0x80, 0x67, 0xc5, 0x49, 0x57, 0x39, 0x6e, 0xd4, 0xb7, 0x4d, 0xf1, 0x9a, 0x30, 0x4c, 0x4f,
	0xde, 0x25, 0x87, 0xee, 0x17, 0x08, 0xdb, 0x71, 0x05, 0x99, 0xac, 0x39, 0xca, 0x60, 0x27, 0xe3,
	0x12, 0x33, 0x02, 0x73, 0x62, 0xdc, 0xe4, 0xd0, 0x9b, 0xc7, 0x60, 0xbb, 0x8c, 0x6d, 0x3f, 0x6a,
	0xb7, 0xfd, 0xa9, 0xe1, 0x0f, 0x75, 0xa6, 0xa5, 0x27, 0xc3, 0xf3, 0xbc, 0xdf, 0x32, 0x1e, 0x66,
	0xc9, 0x36, 0xf9, 0x94, 0xce, 0xf2, 0x62, 0xb7, 0xdf, 0xc1, 0x20, 0x4a, 0xf3, 0x5d, 0xb1, 0xbf,
	0x34, 0xf2, 0xa4, 0x48, 0xb2, 0x06, 0x5e, 0xfd, 0xed, 0xe3, 0x23, 0x77, 0x97, 0x65, 0xc9, 0x76,
	0x0d, 0x6f, 0xb0, 0xbe, 0xbf, 0xcf, 0x53, 0x4b, 0xb3, 0x35, 0xe7, 0xe4, 0x7a, 0x32, 0x6b, 0xe2,
	0x67, 0xad, 0x56, 0x5f, 0x79, 0x9f, 0xa7, 0x30, 0xc4, 0xfa, 0xe1, 0xb0, 0x59, 0x5b, 0xc8, 0xd6,
	0x9c, 0x63, 0x30, 0x70, 0x6f, 0xbf, 0x59, 0x5b, 0x3d, 0x5b, 0x73, 0x74, 0x18, 0x63, 0xf3, 0x2e,
	0x2d, 0x36, 0xc9, 0xe7, 0x78, 0x7b, 0xc8, 0x6e, 0xd3, 0xc2, 0xd2, 0x6d, 0xcd, 0x31, 0x61, 0x8a,
	0xfb, 0x55, 0xdf, 0x3b, 0xab, 0x6f, 0xf7, 0x1c, 0xe3, 0xda, 0x54, 0xd5, 0x45, 0x35, 0xcc, 0xd5,
	0x1f, 0x1d, 0x1b, 0xdd, 0xfa, 0x23, 0x6c, 0xb8, 0xef, 0x64, 0xcc, 0xf8, 0x07, 0xba, 0x60, 0x1e,
	0x79, 0x01, 0xa7, 0xd8, 0xac, 0x40, 0xe4, 0xbf, 0x8f, 0x17, 0x61, 0xc0, 0x38, 0xd1, 0xe0, 0x4c,
	0x21, 0xd1, 0xa2, 0x2f, 0x25, 0x82, 0x33, 0x3c, 0x52, 0x71, 0x4b, 0x5f, 0x4a, 0xc6, 0x03, 0x42,
	0x60, 0xac, 0xa0, 0x78, 0x80, 0xbf, 0x4b, 0xd4, 0xad, 0x79, 0xe3, 0xd3, 0x48, 0x92, 0x7e, 0x17,
	0x89, 0x88, 0xb9, 0x3e, 0xe9, 0x75, 0xdb, 0x34, 0xe8, 0x6b, 0x89, 0x60, 0x8a, 0x2f, 0x54, 0x5c,
	0xe0, 0xcb, 0x38, 0x58, 0xf1, 0x78, 0x29, 0xa9, 0x5c, 0x2d, 0xc9, 0xb7, 0x12, 0xc1, 0xa5, 0xb2,
	0xe2, 0xb1, 0x1d, 0xc0, 0x05, 0x26, 0x2a, 0xd3, 0xbd, 0xa1, 0x51, 0x50, 0x0d, 0xf3, 0xbd, 0x44,
	0x70, 0xae, 0xb8, 0xf8, 0xcf, 0x8f, 0x60, 0x82, 0xc7, 0x0f, 0xeb, 0xc8, 0xb0, 0xa3, 0x7e, 0x96,
	0x08, 0x5e, 0x29, 0x29, 0x1e, 0xc9, 0x13, 0x78, 0x8d, 0x2d, 0x95, 0xc7, 0x43, 0xc9, 0xe6, 0x1f,
	0xab, 0xc5, 0xdb, 0xf9, 0x7f, 0xd5, 0xf3, 0x5b, 0x2a, 0xf5, 0x89, 0x1f, 0x75, 0xad, 0xaa, 0x59,
	0x2d, 0x10, 0x49, 0xdf, 0x23, 0x2f, 0xc1, 0xc6, 0xd3, 0x27, 0xd6, 0xa3, 0x92, 0xc6, 0x2b, 0xb1,
	0x08, 0xa9, 0x47, 0x8e, 0x9f, 0xc9, 0x0f, 0x85, 0xf0, 0x3d, 0x62, 0xc0, 0x69, 0xf3, 0xb6, 0xf5,
	0x8d, 0x19, 0x27, 0x3f, 0x4a, 0xa4, 0x9e, 0xbb, 0xbe, 0x31, 0xe3, 0x64, 0x08, 0x16, 0x3e, 0x57,
	0x20, 0x9c, 0xcf, 0x17, 0x8c, 0xfb, 0x75, 0x0b, 0x62, 0xc2, 0xa4, 0xb9, 0x6d, 0x3b, 0xb5, 0x8c,
	0x28, 0x5f, 0xba, 0x54, 0xb2, 0x90, 0x93, 0x12, 0xdd, 0x0e, 0xea, 0x9f, 0xfa, 0xed, 0xbf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x6f, 0xf6, 0xe1, 0xfc, 0xf9, 0x02, 0x00, 0x00,
}
